
/**
\mainpage ODRL 2.0 Simple API
<!--<script src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js"></script>-->

<h1>Introduction</h1>
<p>ODRL2.0 is a language to express policies: permissions, prohibitions, obligations.</p>
<p>This API is able to manipulate expressions conformant to a subset of the <a href="http://www.w3.org/community/odrl/two/model/">
Core Model specification</a> and <a href="http://www.w3.org/community/odrl/two/vocab/">Common Vocabulary</a>, but it is intended to grow.</p>
<p>ODRL2.0 can be serialized as XML, as JSON or as RDF based on the draft <a href="http://www.w3.org/ns/odrl/2/">ODRL2.0 Ontology</a>. The only serialization this Java API supports in this version is the RDF</p>

<h1>Download</h1>

<a href="lasversion.jar">odrl2simple.0.1.jar</a>

<h1>Fast intro to ODRL2.0 and ODRL2.0 Simple API</h1>

ODRL2.0 Core Model is abstract, i.e., serialization independent. The examples in this document assume the RDF serialization. First, some common prefixes:
<center>
<table>
<tr><td>prefix</td><td>namespace</td></tr>
<tr><td>odrl</td><td>http://www.w3.org/ns/odrl/2/</td></tr>
<tr><td>dct</td><td>http://purl.org/dc/terms/</td></tr>
</table>
</center>

<h2>A first example</h2>
A policy may represent the following statement: <i>"Alice authorizes Bob to smoke"</i>. 
<pre>
</policy:01>
	a odrl:Set;
	odrl:permission "smoke" ;
        odrl:assigner "Alice" ;
        odrl:assignee "Bob" .
</pre>
<p>Note we have created a resource, policy:01, of class odrl:Set, with three properties: the permitted action ("smoke"), the assignee ("Bob") and the assigner ("Alice"). 
The absence of the assignee is usually interpreted as "anybody", the absence of the assigner might be interpreted as if it matches the policy publisher.</p>

This may have been defined in Java with the 
<pre>
        Policy policy = new Policy();
        Rule rule = new Rule();
        rule.addAction("smoke");
        rule.setAssigner("Alice");
        rule.setAssignee("Bob");
        policy.add(rule);

        System.out.println(ODRLRDF.getRDF(policy));

</pre>
Note that the last line converts objects in the ODRL2.0 Simple API Model to the RDF (Turtle by default) serialization.

<center><img src = "../../img/ODRLDiagram.png"/></center>

<h1>Profile for Linked Data</h1>

<p>The Linked Data profile uses a subset of the ODRL2.0 Core Model and Common Vocubulary, plus the needed vocabulary derived from the former: the <a href="http://oeg-dev.dia.fi.upm.es/licensius/static/ldr/">Linked Data Rights</a> vocabulary</p>


<h1>Author and terms of use</h1>
<p>This API has been programmed by Víctor Rodríguez Doncel at the <a href="http://www.oeg-upm.net">Ontology Engineering Group</a>, in Universidad Politécnica de Madrid (Spain)</p>
<center><img src = "../../img/oeg100.png"/></center>

You may??? use this software.... etc. etc.

*/